# Generated by Django 4.2.5 on 2024-11-06 06:49

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Unite', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AppUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=50, unique=True)),
                ('username', models.CharField(max_length=50)),
                ('cin', models.CharField(max_length=8, unique=True)),
                ('quota', models.IntegerField(blank=True, null=True)),
                ('role', models.CharField(max_length=50)),
                ('identifiant', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('roleRes', models.CharField(blank=True, max_length=50, null=True)),
                ('image_user', models.ImageField(blank=True, null=True, upload_to='user_images/')),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('id_unite', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Unite.unite')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
